// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "darwin", "darwin-arm64", "linux-musl", "debian-openssl-1.1.x", "darwin"]
  previewFeatures = ["interactiveTransactions"]
  output = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      Int      @id @default(autoincrement())
  full_name               String
  email                   String   @unique
  phone                   String
  cpf                     String   @unique
  birth_date              DateTime
  password                String
  transaction_password    String
  balance                 Decimal  @db.Decimal(13,2) @default(0.00)
  agency                  String?
  account_number          String?
  blocked                 Boolean  @default(false)
  block_date              DateTime?
  created_at              DateTime @default(now())
  updated_at              DateTime?
  address                 Address?  @relation(fields: [addressId], references: [id])
  addressId               Int?      @unique
  transferedFrom          Transaction[]  @relation("TransferFrom")
  transferedTo            Transaction[]  @relation("TransferTo")
}

model Address {
  id            Int      @id @default(autoincrement())
  user          User?    
  cep           String
  street        String
  number        String
  complement    String?
  neighborhood  String
  city          String
  state         String
  created_at    DateTime @default(now())
  updated_at    DateTime?
}

model Transaction {
  id            Int     @id @default(autoincrement())
  from_user     User    @relation("TransferFrom" ,fields: [from_user_id], references: [id])
  from_user_id  Int
  to_user       User    @relation("TransferTo" ,fields: [to_user_id], references: [id])
  to_user_id    Int
  value         Decimal  @db.Decimal(13,2)
  description   String?
  created_at    DateTime @default(now())
}
